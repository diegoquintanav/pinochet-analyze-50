name: deploy

on:
  push:
    branches: ["main"]
    paths:
      - "dbt_pinochet/**"
      - "poetry.lock"
      - "pyproject.toml"
      - ".github/workflows/dbt-docs-generate.yml"
      - "services/dbt-deps-image/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  DBT_DB_PINOCHET_PROD_DBNAME: ${{ vars.DB_PINOCHET_DBNAME }}
  DBT_DB_PINOCHET_PROD_HOST: ${{ vars.DB_PINOCHET_HOST }}
  DBT_DB_PINOCHET_PROD_PORT: ${{ vars.DB_PINOCHET_PORT }}
  DBT_DB_PINOCHET_PROD_USERNAME: ${{ vars.DB_PINOCHET_USER }}
  DBT_DB_PINOCHET_PROD_PASSWORD: ${{ secrets.DB_PINOCHET_PASSWORD }}
  DBT_TARGET: prod

jobs:
  dbt-docs-generate:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/diegoquintanav/pinochet-dbt:latest
      options: --user root # https://github.com/actions/checkout/issues/956
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: prepare dbt profiles
        run: |
          mkdir -p ~/.dbt
          cp $GITHUB_WORKSPACE/dbt_pinochet/profiles/profiles.yml ~/.dbt/profiles.yml
      - name: run dbt deps
        run: |
          DBT_PROJECT_DIR=$GITHUB_WORKSPACE/dbt_pinochet dbt deps
      - name: run dbt build
        run: |
          DBT_PROJECT_DIR=$GITHUB_WORKSPACE/dbt_pinochet dbt build --target ${{ env.DBT_TARGET }}
      - name: prepare artifacts folder
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts
          cp $GITHUB_WORKSPACE/.github/assets/gh-root.html $GITHUB_WORKSPACE/artifacts/index.html
      - name: build dbt docs and move to /artifacts
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/dbt_docs
          DBT_PROJECT_DIR=$GITHUB_WORKSPACE/dbt_pinochet dbt docs generate --target ${{ env.DBT_TARGET }}
          cp -r $GITHUB_WORKSPACE/dbt_pinochet/target/* $GITHUB_WORKSPACE/artifacts/dbt_docs
      - name: create elementary report and move to /artifacts
        run: |
          mkdir -p $GITHUB_WORKSPACE/artifacts/elementary
          DBT_PROJECT_DIR=$GITHUB_WORKSPACE/dbt_pinochet edr report --env prod --project-profile-target ${{ env.DBT_TARGET }} --file-path $GITHUB_WORKSPACE/artifacts/elementary/index.html
      - name: create build artifacts
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ github.workspace }}/artifacts

  # https://github.com/actions/deploy-pages
  deploy-pages:
    needs: dbt-docs-generate
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  deploy-api-fly-io:
    needs: dbt-docs-generate
    name: Deploy fastapi app to fly.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        working-directory: ./services/pinochet-api
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
